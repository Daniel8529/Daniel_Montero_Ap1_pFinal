@page "/R_Curso"
@page "/R_Curso/{ID:int}" 
@inject IToastService toast 

<EditForm Model="curso" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div className="container">
         <div class="card align-items-center">
            <div class="card">


                <div class="card-header">
                    <h3>Registro de Curso</h3>
                </div>


                <div class="card-body">
                    <form>

                        @*Producto id*@

                        <div class="form-row align-items-center">

                            <div class="col">

                                <div class="form-group">

                                    <label>CursoID</label>

                                    <div class="input-group">

                                        <InputNumber @bind-Value="curso.CursoId" class="form-control col-4" />

                                        <div>

                                            <button type="button" class="btn btn-primary input-group-text"
                                                @onclick="Buscar">Buscar</button>

                                        </div>

                                    </div>

                                </div>

                            </div>

                        </div>


                        @* Descricion *@
                        <div class="form-group">
                            <label>Descripcion</label>
                            <InputText class="form-control" @bind-Value="curso.Descripcion" />
                            <ValidationMessage For="@(() =>curso.Descripcion)" />
                        </div>
                      
                    </form>
                    <div class="card-footer">

                        <div class="form-group text-center" display: inline-block>

                            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>

                            <button type="submit" class="btn btn-lg btn-success">Guardar</button>

                            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int ID  { get; set; }
    public Curso curso {set;get;}= new Curso();
  
     [Inject]
    public CursoBLL cursoBLL { get; set; }
    protected override void OnInitialized()
    {
        curso.CursoId=ID;

        Buscar();

    }

  

    public void Buscar()
    {
    if(curso.CursoId>0){
            Curso? encontrado =cursoBLL.Buscar(curso.CursoId);
        
            if (encontrado != null)
            {
            this.curso= encontrado;
        @*      this.asistencia.asistenciadetalle=encontrado; *@
            }
            else
            {
                 toast.ShowError("No se encontro ");
            
            }
     }
    }
    public void Nuevo()
    {
        curso= new Curso();
      
        
    }
    public void Guardar()
    {    
        if(!cursoBLL.Existes(curso.Descripcion) || cursoBLL.Existes(curso.Descripcion)){
            if(cursoBLL.insertar(curso))
            {
                Nuevo();
                toast.ShowSuccess("Se ha Guardar el curso");
            }else{
                    
                toast.ShowError("No se ha Guardado");
            } 
        }else{
                    
                toast.ShowError("Ya existe este Descripcion");
            }     
    }
    public void Eliminar()
    {
        if (cursoBLL.Eliminar(curso.CursoId))
        {
              Nuevo();
              toast.ShowSuccess("Se a eliminado con exito"); 
               

        }
        else
        {
          toast.ShowError("No se pudo eliminar con exito"); 

        }
    }
  
   
    
}



