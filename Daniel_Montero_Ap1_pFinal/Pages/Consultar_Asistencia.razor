@page "/Consultar_Asistencia"





<EditForm Model="asistencia" OnValidSubmit="Buscar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">


        <div class="card-header">
            <h3>Consulta</h3>
        </div>

        <div class="card-body">
            <form>
                  <div class="container">


                        

                        <div>
                            <label>Desde</label>
                            <InputDate class="form-control" @bind-Value="FechaDesde" name="DataPickerDesde" />
                        </div>

                        <div>
                            <label>Hasta</label>
                            <InputDate class="form-control" @bind-Value="FechaHasta" name="DataPickerDesde" />
                        </div>
                    </div>
                <div class="input-group d-flex align-items-end">
                    <div class="flex-fill mx-2">
                        <label>Filtro</label>
                        <select class="form-control col-2" @bind="Filtro">
                            <option value="0"></option>
                            <option value="1">Id y Fecha</option>
                            <option value="2">Grupo</option>
                            <option value="3">Fecha</option>
                        </select>

                    </div>



                    <div class="flex-fill mx-2">
                        <label>Criterio</label>
                        <input type="text" class="form-control" @bind="Criterio" />
                    </div>

                    <button type="button" class="btn btn-warning" @onclick="Buscar">
                        <i class="oi oi-magnifying-glass mr-2" /> Buscar
                    </button>
                </div>

            </form>
        </div>


        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr class="table-info">
                    <th>Asistencia Id</th>
                    <th>Grupo Id</th>
                    <th>Presente</th>
                    <th>Fecha</th>
                    <th>Presente</th>
                    <th>Ausente</th>
                    <th>Vista <span class="oi oi-eye"></span> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.AsistenciaId</td>
                        <td>@item.GrupoId</td>
                        <td>@item.Presente</td>
                        <td>@item.Fecha</td>
                        <td>@item.Presente</td>
                        <td>@item.Ausente</td>
                        <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="R_Asistencia/@item.AsistenciaId">Ver</a></td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>



</EditForm>

@code {
     
     public Asistencia asistencia {set;get;}= new Asistencia();
     public List<Asistencia> lista { get; set; } = new List<Asistencia>();
     [Inject]
    public AsistenciaBLL asistenciaBLL { get; set; }

    public string? Filtro { get; set; }
    public string? Criterio { get; set; }

     public  DateTime FechaHasta { get; set; }= DateTime.Now;
    public  DateTime FechaDesde { get; set; }= DateTime.Now;
    public void Buscar()
    {
        lista =asistenciaBLL.GeLista();
       

        if (Criterio != null || FechaHasta!= null || FechaDesde!=null)
        {

            switch (Filtro)

            {

                case "0":

                    lista =asistenciaBLL.GeLista();

                    break;

                case "1":


                    lista = asistenciaBLL.GetList(l => l.AsistenciaId.ToString() == (Criterio)&& l.Fecha>= FechaDesde && l.Fecha <= FechaHasta);


                    break;


                case "2":

                    lista =asistenciaBLL.GetList(l => l.GrupoId.ToString().Contains(Criterio.ToLower()));
                    break;

                 case "3":
                
                  lista = asistenciaBLL.GetList(l => l.Fecha>= FechaDesde && l.Fecha <= FechaHasta);
                    break;





            }

        }
        else

        {
            
            lista =asistenciaBLL.GetList(t => true);

        }



    }



}